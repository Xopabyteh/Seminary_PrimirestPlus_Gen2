{"version":3,"file":"background.js","mappingslGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AENA;AACA;AACA;AACA;AACA","sources":["webpack://seminary-primirestplusgen2/./src/background/background.js","webpack://seminary-primirestplusgen2/./src/background/googleImagesService.js","webpack://seminary-primirestplusgen2/webpack/bootstrap","webpack://seminary-primirestplusgen2/webpack/runtime/define property getters","webpack://seminary-primirestplusgen2/webpack/runtime/hasOwnProperty shorthand","webpack://seminary-primirestplusgen2/webpack/runtime/make namespace object","webpack://seminary-primirestplusgen2/webpack/before-startup","webpack://seminary-primirestplusgen2/webpack/startup","webpack://seminary-primirestplusgen2/webpack/after-startup"],"sourcesContent":["import { searchForFoodPicture } from \"./googleImagesService\";\r\n\r\nlet scolarestTab = undefined;\r\n\r\nconst onTabUpdated = async (tabId, changeInfo, tab) => {\r\n    if (!changeInfo.status)\r\n        return;\r\n    if (changeInfo.status != 'complete')\r\n        return;\r\n    if (!tab.url)\r\n        return;\r\n    if (!tab.url.includes(\"mujprimirest.cz\"))\r\n        return;\r\n    if (tab.url.includes(\"auth\"))\r\n        return;\r\n\r\n    //https://mujprimirest.cz/CS/boarding\r\n    //[0] always link\r\n    //[1] always region info\r\n    //[2...] website page\r\n    scolarestTab = tab;\r\n\r\n    //Send tab to tabId\r\n    chrome.tabs.sendMessage(\r\n        tabId,\r\n        {\r\n            type: \"LOAD\",\r\n            tab: tab,\r\n        }\r\n    );\r\n}\r\n\r\nchrome.tabs.onUpdated.addListener((tabId, changeInfo, tab) => onTabUpdated(tabId, changeInfo, tab));\r\n\r\nconst getStorageItem = async (key = '', defaultValue = '') => {\r\n    const result = (await chrome.storage.local.get(key))[key];\r\n    if(result == undefined) {\r\n        setStorageItem(key, defaultValue);\r\n        return defaultValue;\r\n    }\r\n    return result;\r\n}\r\n\r\nconst setStorageItem = async (key = '', value = '') => {\r\n    chrome.storage.local.set({ [key] : value });\r\n}\r\n\r\nchrome.runtime.onMessage.addListener((msg, sender, sendResponse) => {\r\n    if(msg.type == 'GET_STORAGE_ITEM') {\r\n        const key = msg.key;\r\n        const defaultValue = msg.defaultValue;\r\n        getStorageItem(key, defaultValue).then(res => sendResponse(res));\r\n\r\n        return true;\r\n    }\r\n\r\n    else if(msg.type == 'SET_STORAGE_ITEM') {\r\n        const key = msg.key;\r\n        const value = msg.value;\r\n        const notifyTab = msg.notifyTab ?? false;\r\n        \r\n        setStorageItem(key, value);\r\n        \r\n        if(notifyTab) {\r\n            // chrome.runtime.sendMessage({\r\n            //     type: 'OPTION_CHANGED',\r\n            //     key: key,\r\n            //     value: value\r\n            // })\r\n\r\n            if(scolarestTab == undefined || scolarestTab.id == undefined || scolarestTab.active === false)\r\n                return false;\r\n        \r\n            chrome.tabs.sendMessage(\r\n                scolarestTab.id,\r\n                {\r\n                    type: 'OPTION_CHANGED',\r\n                    key: key,\r\n                    value: value\r\n                }\r\n            );\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    else if(msg.type == \"GET_IMAGE\") {\r\n        console.log(msg);\r\n        const query = msg.query;\r\n        const index = msg.index;\r\n        const sizeIndex = msg.sizeIndex;\r\n        searchForFoodPicture(query, index, sizeIndex).then(foodPictureSearch => sendResponse(foodPictureSearch));\r\n        return true;\r\n    }\r\n\r\n    if (chrome.runtime.lastError) {\r\n        console.error(chrome.runtime.lastError);\r\n    }\r\n});\r\n","const googleSearchCredentials = {\r\n    customSearchKey: 'AIzaSyA2R8PmMNUk_YezsELTBNsIU0jWss1-uwQ',\r\n    searchEngineId: 'c5306d0b9758c45b1'\r\n};\r\n\r\nconst createGoogleFetchRequest = async (query, num, startFrom, imgSize) => {\r\n    const key = googleSearchCredentials.customSearchKey;\r\n    const cx = googleSearchCredentials.searchEngineId;\r\n    const searchType = 'image';\r\n    // const imgSize = 'huge';\r\n    // const imgSize = 'huge';\r\n    const excludeTerms = 'facebook OR x-raw-image OR tiktok OR denikmalepozitkarky OR cookandme OR function OR docplayer';\r\n    const lr = 'lang_cs';\r\n    const gl = 'cs';\r\n    const hl = 'cs';\r\n    const request =\r\n        'https://www.googleapis.com/customsearch/' +\r\n        // `v1?key=${key}&cx=${cx}&q=${query}&searchType=${searchType}&num=${num}&start=${startFrom}&excludeTerms=${excludeTerms}&lr=${lr}&gl=${gl}&hl=${hl}`;\r\n        `v1?key=${key}&cx=${cx}&q=${query}&searchType=${searchType}&num=${num}&start=${startFrom}&imgSize=${imgSize}&excludeTerms=${excludeTerms}&lr=${lr}&gl=${gl}&hl=${hl}`;\r\n\r\n    return request;\r\n}\r\nconst getGoogleImagePictures = async (query, num, startFrom, imgSize) => {\r\n    const requestUrl = await createGoogleFetchRequest(query, num, startFrom, imgSize);\r\n    const response = await fetch(requestUrl);\r\n    const data = await response.json();\r\n    const pictures = data.items;\r\n    return pictures;\r\n}\r\nconst getGoogleImagePicture = async (query, startFrom, imgSize) => {\r\n    const items = await getGoogleImagePictures(query, 1, startFrom, imgSize);\r\n    if (items === undefined) {\r\n        return undefined;\r\n    } \r\n    return items[0];\r\n}\r\n\r\nconst validImgSizes = [\r\n    'huge',\r\n    'xlarge',\r\n]\r\n//Attempts per size, so in total its n * size\r\nconst attemptThreshold = 7;\r\nconst searchForFoodPicture = async (foodName, startFrom, sizeIndex) => {\r\n    if(sizeIndex === undefined) {\r\n        sizeIndex = 0;\r\n    }\r\n\r\n    const foodPictureSearch = {\r\n        foodPicture: undefined,\r\n        searchIndex: startFrom,\r\n        sizeIndex: sizeIndex\r\n    };\r\n\r\n    if(sizeIndex >= validImgSizes.length) {\r\n        return foodPictureSearch;\r\n    }\r\n\r\n    //Try to search for pictures until we find one\r\n    while (true) {\r\n        if(\r\n            foodPictureSearch.foodPicture !== undefined \r\n            && foodPictureSearch.foodPicture.link !== undefined\r\n            && typeof(foodPictureSearch.foodPicture.link) === 'string'\r\n            && foodPictureSearch.foodPicture.link.includes('https://')\r\n            && !foodPictureSearch.foodPicture.link.includes('function')\r\n            ) {\r\n            break;\r\n        }\r\n\r\n        foodPictureSearch.searchIndex++;\r\n\r\n        const picture = await getGoogleImagePicture(foodName, startFrom, validImgSizes[sizeIndex]);\r\n        foodPictureSearch.foodPicture = picture;\r\n        //Not found after many attempts, try to switch sizes\r\n        if (foodPictureSearch.searchIndex >= startFrom + attemptThreshold) {\r\n            return await searchForFoodPicture(foodName, 0, sizeIndex + 1);\r\n        }\r\n    }\r\n    //console.log(foodPictureSearch);\r\n    return foodPictureSearch;\r\n}\r\n\r\nexport {\r\n    searchForFoodPicture\r\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n__webpack_require__(\"./src/background/background.js\");\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/background/googleImagesService.js\");\n",""],"names":[],"sourceRoot":""}