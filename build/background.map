{"version":3,"file":"background.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://seminary-primirestplusgen2/./src/background/background.js"],"sourcesContent":["let scolarestTab = null;\r\nconst storageKey_IsDeveloper = \"isDeveloper\";\r\n\r\nchrome.tabs.onUpdated.addListener(async (tabId, changeInfo, tab) => {\r\n    if (!changeInfo.status)\r\n        return;\r\n    if (changeInfo.status != 'complete')\r\n        return;\r\n    if (!tab.url)\r\n        return;\r\n    if (!tab.url.includes(\"mujprimirest.cz\"))\r\n        return;\r\n    if (tab.url.includes(\"auth\"))\r\n        return;\r\n\r\n    //https://mujprimirest.cz/CS/boarding\r\n    //[0] always link\r\n    //[1] always region info\r\n    //[2...] website page\r\n    scolarestTab = tab;\r\n\r\n    let pageComponents = tab.url.split(\"/\");\r\n    let page = pageComponents[pageComponents.length - 1];\r\n\r\n    let isDeveloper = await getDeveloperMode();\r\n\r\n    //Send tab to tabId\r\n    chrome.tabs.sendMessage(\r\n        tabId,\r\n        {\r\n            type: \"LOAD\",\r\n            tab: tab,\r\n            isDeveloper: isDeveloper,\r\n            page: page\r\n        }\r\n    );\r\n});\r\n\r\nconst googleSearchCredentials = {\r\n    customSearchKey: 'AIzaSyA2R8PmMNUk_YezsELTBNsIU0jWss1-uwQ',\r\n    searchEngineId: 'c5306d0b9758c45b1'\r\n};\r\n\r\nconst createGoogleFetchRequest = async (query, num, startFrom, imgSize) => {\r\n    const key = googleSearchCredentials.customSearchKey;\r\n    const cx = googleSearchCredentials.searchEngineId;\r\n    const searchType = 'image';\r\n    // const imgSize = 'huge';\r\n    // const imgSize = 'huge';\r\n    const excludeTerms = 'facebook OR x-raw-image OR tiktok OR denikmalepozitkarky OR cookandme OR function OR docplayer';\r\n    const lr = 'lang_cs';\r\n    const gl = 'cs';\r\n    const hl = 'cs';\r\n    const request =\r\n        'https://www.googleapis.com/customsearch/' +\r\n        // `v1?key=${key}&cx=${cx}&q=${query}&searchType=${searchType}&num=${num}&start=${startFrom}&excludeTerms=${excludeTerms}&lr=${lr}&gl=${gl}&hl=${hl}`;\r\n        `v1?key=${key}&cx=${cx}&q=${query}&searchType=${searchType}&num=${num}&start=${startFrom}&imgSize=${imgSize}&excludeTerms=${excludeTerms}&lr=${lr}&gl=${gl}&hl=${hl}`;\r\n\r\n    return request;\r\n}\r\nconst getGoogleImagePictures = async (query, num, startFrom, imgSize) => {\r\n    const requestUrl = await createGoogleFetchRequest(query, num, startFrom, imgSize);\r\n    const response = await fetch(requestUrl);\r\n    const data = await response.json();\r\n    const pictures = data.items;\r\n    return pictures;\r\n}\r\nconst getGoogleImagePicture = async (query, startFrom, imgSize) => {\r\n    const items = await getGoogleImagePictures(query, 1, startFrom, imgSize);\r\n    if (items === undefined) {\r\n        return undefined;\r\n    } \r\n    return items[0];\r\n}\r\n\r\nconst validImgSizes = [\r\n    'huge',\r\n    'xlarge',\r\n    'xxlarge'\r\n]\r\n//Attempts per size, so in total its n * size\r\nconst attemptThreshold = 7;\r\nconst searchForFoodPicture = async (foodName, startFrom, sizeIndex) => {\r\n    if(sizeIndex === undefined) {\r\n        sizeIndex = 0;\r\n    }\r\n\r\n    const foodPictureSearch = {\r\n        foodPicture: undefined,\r\n        searchIndex: startFrom,\r\n        sizeIndex: sizeIndex\r\n    };\r\n\r\n    if(sizeIndex >= validImgSizes.length) {\r\n        return foodPictureSearch;\r\n    }\r\n\r\n    //Try to search for pictures until we find one\r\n    while (true) {\r\n        if(\r\n            foodPictureSearch.foodPicture !== undefined \r\n            && foodPictureSearch.foodPicture.link !== undefined\r\n            && typeof(foodPictureSearch.foodPicture.link) === 'string'\r\n            && foodPictureSearch.foodPicture.link.includes('https://')\r\n            && !foodPictureSearch.foodPicture.link.includes('function')\r\n            ) {\r\n            break;\r\n        }\r\n\r\n        foodPictureSearch.searchIndex++;\r\n\r\n        const picture = await getGoogleImagePicture(foodName, startFrom, validImgSizes[sizeIndex]);\r\n        foodPictureSearch.foodPicture = picture;\r\n        //Not found after many attempts, try to switch sizes\r\n        if (foodPictureSearch.searchIndex >= startFrom + attemptThreshold) {\r\n            return await searchForFoodPicture(foodName, 0, sizeIndex + 1);\r\n        }\r\n    }\r\n    //console.log(foodPictureSearch);\r\n    return foodPictureSearch;\r\n}\r\n\r\nconst toggleDeveloperMode = async () => {\r\n    const storageResult = await chrome.storage.local.get(storageKey_IsDeveloper)\r\n    const isDeveloper = !storageResult.isDeveloper;\r\n    chrome.storage.local.set({ isDeveloper : isDeveloper });\r\n    \r\n    chrome.runtime.sendMessage(\r\n        {\r\n            type: \"DEVELOPER_CHANGED\",\r\n            isDeveloper: isDeveloper\r\n        }\r\n    );\r\n\r\n    if(scolarestTab !== null) {\r\n        chrome.tabs.sendMessage(\r\n            scolarestTab.id,\r\n            {\r\n                type: \"DEVELOPER_CHANGED\",\r\n                isDeveloper: isDeveloper\r\n            }\r\n        );\r\n    }\r\n}\r\nconst getDeveloperMode = async () => {\r\n    const storageResult = await chrome.storage.local.get(storageKey_IsDeveloper);\r\n    return storageResult.isDeveloper;\r\n}\r\n\r\nchrome.runtime.onMessage.addListener((msg, sender, sendResponse) => {\r\n    // console.log(msg);\r\n    \r\n    if(msg.type == \"TOGGLE_DEVELOPER\") {\r\n        toggleDeveloperMode();\r\n        return false;\r\n    }\r\n    if(msg.type == \"GET_DEVELOPER\") {\r\n        getDeveloperMode().then(isDeveloper=> {\r\n            chrome.runtime.sendMessage(\r\n                {\r\n                    type: \"DEVELOPER_CHANGED\",\r\n                    isDeveloper: isDeveloper\r\n                }\r\n            );\r\n        });\r\n        return false;\r\n    }\r\n    if(msg.type == \"GET_IMAGE\") {\r\n        console.log(msg);\r\n        const query = msg.query;\r\n        const index = msg.index;\r\n        const sizeIndex = msg.sizeIndex;\r\n        searchForFoodPicture(query, index, sizeIndex).then(foodPictureSearch => sendResponse(foodPictureSearch));\r\n        return true;\r\n    }\r\n\r\n    if (chrome.runtime.lastError) {\r\n        console.error(chrome.runtime.lastError);\r\n    }\r\n});\r\n"],"names":[],"sourceRoot":""}